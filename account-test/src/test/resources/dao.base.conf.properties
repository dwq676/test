

## \u6570\u636E\u5E93\u76F8\u5173\u914D\u7F6E######################################################
## \u8FDE\u63A5\u6C60\u521D\u59CB\u5316\u8FDE\u63A5\u6570\u91CF
snow.dao.database.initial-size = 0
## \u8FDE\u63A5\u6C60\u6700\u5927\u6FC0\u6D3B\u6570\u91CF\uFF0C\u5982\u679C\u975E\u6B63\u6574\u6570\uFF0C\u5219\u4E0D\u505A\u9650\u5236\u3002
snow.dao.database.max-active = 100
## \u8FDE\u63A5\u6C60\u8FDE\u63A5\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF08\u5355\u4F4D\u6BEB\u79D2\uFF09\uFF0C -1 \u5219\u5C06\u65E0\u9650\u7B49\u5F85\u3002
snow.dao.database.max-wait = 5000
## \u8FDE\u63A5\u68C0\u6D4B\u95F4\u9694\u65F6\u95F4\uFF08\u5355\u4F4D\uFF1A\u6BEB\u79D2\uFF09\uFF0C0\u8868\u793A\u4E0D\u68C0\u6D4B\u3002
snow.dao.database.test-interval = 600000
## \u8BBE\u7F6E\u81EA\u52A8\u65AD\u5F00\u8FDE\u63A5\u6700\u5927\u65F6\u957F\uFF0C\u5355\u4F4D\uFF1A\u79D2\u3002
snow.dao.database.remove-abandoned-timeout = 180
## \u8D85\u8FC7\u65F6\u95F4\u9650\u5236\u662F\u5426\u56DE\u6536
snow.dao.remove-abandoned =true
##abandoned\u8FDE\u63A5\u65F6\u8F93\u51FA\u9519\u8BEF\u65E5\u5FD7
snow.dao.log-abandoned=true

snow.dao.time-between-eviction-runs-millis = 60000
snow.dao.min-evictable-idle-time-millis = 300000
snow.dao.test-while-idle = true
snow.dao.test-on-borrow = false
snow.dao.test-on-return = false
snow.dao.pool-prepared-statements = true
snow.dao.maxPool-prepared-statement-per-connection-size = 50
snow.dao.filters = stat


snow.datasource.multiplexing = 1000
snow.dao.hibernate.show-sql=false;
snow.dao.hibernate.use-second-level=false;
snow.dao.hibernate.set-packages-to-scan=com.zoe.snow



## \u8BF7\u6C42\u7B7E\u540D\u5BC6\u94A5\u3002
snow.context.request.sign.key =